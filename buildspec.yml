version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 010928179293.dkr.ecr.us-east-1.amazonaws.com
  build:
    commands:
      - IMAGE_TAG=$(date +%Y%m%d%H%M%S)  # Generate a unique image tag
      - echo Building the Docker image...
      - docker build -t 010928179293.dkr.ecr.us-east-1.amazonaws.com/akash:$IMAGE_TAG .
      - echo Pushing the Docker image...
      - docker push 010928179293.dkr.ecr.us-east-1.amazonaws.com/akash:$IMAGE_TAG
      - echo $IMAGE_TAG > imageTag.txt  # Save the image tag for later use
  post_build:
    commands:
      - echo Updating ECS Task Definition...
      - sed -i "s/\${IMAGE_TAG}/$IMAGE_TAG/g" ecs-task-def.json  # Replace the placeholder with the actual image tag
      - sed -i 's/\r//' ecs-task-def.json  # Remove any carriage return characters (Windows line endings)
      - sed -i 's/[[:space:]]*$//' ecs-task-def.json  # Remove any trailing spaces
      - jq . ecs-task-def.json  # Validate the file with jq
      - echo Registering the new ECS Task Definition...
      - aws ecs register-task-definition --cli-input-json file://ecs-task-def.json
      - echo Deploying the updated task definition to ECS...
      - aws ecs update-service --cluster democluster --service demo-service --force-new-deployment  # Replace demo-service with your ECS service name

artifacts:
  files:
    - '**/*'
    - ecs-task-def.json   # Make sure this file is included in the artifacts
  discard-paths: yes